{"ast":null,"code":"import axios from 'axios';\n\n// Create a pre-configured instance of axios\nconst api = axios.create({\n  // The URL of our FastAPI backend. For local development, this is correct.\n  baseURL: 'http://localhost:8000'\n});\n\n/**\r\n * Sends form data as a JSON object to get a prediction.\r\n * @param {Object} patientData - An object where keys are feature names.\r\n * @returns {Promise<Object>} The prediction data from the API.\r\n */\nexport const getPredictionFromForm = async patientData => {\n  try {\n    // Post the JavaScript object directly. Axios will automatically set the\n    // correct headers (Content-Type: application/json).\n    const response = await api.post('/predict/', patientData);\n    return response.data;\n  } catch (error) {\n    // Log and re-throw the error to be handled by the App component\n    console.error(\"Error during API call:\", error.response || error.message);\n    // Pass the detailed error message from the backend if it exists\n    throw error.response ? error.response.data : new Error(\"Network or server error\");\n  }\n};\n\n/*\r\n  You can either delete the old function or just leave it here.\r\n  The error occurs because the new one is missing, not because the old one is present.\r\n*/\n\n/**\r\n * DEPRECATED - Uploads a CSV file and returns predictions and explanations.\r\n * @param {FormData} formData - The form data containing the file to upload.\r\n * @returns {Promise<Object>} The prediction data from the API.\r\n */\nexport const uploadAndPredict = async formData => {\n  try {\n    const response = await api.post('/predict-from-file/', formData); // Assuming a different endpoint if you keep both\n    return response.data;\n  } catch (error) {\n    console.error(\"Error during API call:\", error.response || error.message);\n    throw error.response ? error.response.data : new Error(\"Network or server error\");\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","getPredictionFromForm","patientData","response","post","data","error","console","message","Error","uploadAndPredict","formData"],"sources":["C:/Users/devin/Desktop/sideProjects/Detect Parkinson Disease/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create a pre-configured instance of axios\r\nconst api = axios.create({\r\n  // The URL of our FastAPI backend. For local development, this is correct.\r\n  baseURL: 'http://localhost:8000', \r\n});\r\n\r\n/**\r\n * Sends form data as a JSON object to get a prediction.\r\n * @param {Object} patientData - An object where keys are feature names.\r\n * @returns {Promise<Object>} The prediction data from the API.\r\n */\r\nexport const getPredictionFromForm = async (patientData) => {\r\n  try {\r\n    // Post the JavaScript object directly. Axios will automatically set the\r\n    // correct headers (Content-Type: application/json).\r\n    const response = await api.post('/predict/', patientData);\r\n    return response.data;\r\n  } catch (error) {\r\n    // Log and re-throw the error to be handled by the App component\r\n    console.error(\"Error during API call:\", error.response || error.message);\r\n    // Pass the detailed error message from the backend if it exists\r\n    throw error.response ? error.response.data : new Error(\"Network or server error\");\r\n  }\r\n};\r\n\r\n\r\n/*\r\n  You can either delete the old function or just leave it here.\r\n  The error occurs because the new one is missing, not because the old one is present.\r\n*/\r\n\r\n/**\r\n * DEPRECATED - Uploads a CSV file and returns predictions and explanations.\r\n * @param {FormData} formData - The form data containing the file to upload.\r\n * @returns {Promise<Object>} The prediction data from the API.\r\n */\r\nexport const uploadAndPredict = async (formData) => {\r\n  try {\r\n    const response = await api.post('/predict-from-file/', formData); // Assuming a different endpoint if you keep both\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error during API call:\", error.response || error.message);\r\n    throw error.response ? error.response.data : new Error(\"Network or server error\");\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvB;EACAC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,WAAW,IAAK;EAC1D,IAAI;IACF;IACA;IACA,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,WAAW,EAAEF,WAAW,CAAC;IACzD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAAO,CAAC;IACxE;IACA,MAAMF,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG,IAAII,KAAK,CAAC,yBAAyB,CAAC;EACnF;AACF,CAAC;;AAGD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAClD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,qBAAqB,EAAEO,QAAQ,CAAC,CAAC,CAAC;IAClE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAAO,CAAC;IACxE,MAAMF,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG,IAAII,KAAK,CAAC,yBAAyB,CAAC;EACnF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}