{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devin\\\\Desktop\\\\sideProjects\\\\Detect Parkinson Disease\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UploadForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm({\n  onPredict,\n  disabled\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('No file chosen');\n  const [error, setError] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      if (selectedFile.type !== 'text/csv') {\n        setError('Invalid file type. Please upload a .csv file.');\n        setFile(null);\n        setFileName('No file chosen');\n        return;\n      }\n      setError('');\n      setFile(selectedFile);\n      setFileName(selectedFile.name);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please choose a file before predicting.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    onPredict(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upload-instructions\",\n      children: \"Upload a CSV file containing voice measurements to get a prediction. The file must contain the 22 feature columns from the standard Parkinson's dataset.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"custom-file-upload\",\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: disabled || !file,\n        children: disabled ? 'Analyzing...' : 'Get Prediction'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"form-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"R6cP0M+HL5mmavHMKzm8Q06Obdo=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadForm","onPredict","disabled","_s","file","setFile","fileName","setFileName","error","setError","handleFileChange","e","selectedFile","target","files","type","name","handleSubmit","preventDefault","formData","FormData","append","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/devin/Desktop/sideProjects/Detect Parkinson Disease/frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './UploadForm.css';\r\n\r\nfunction UploadForm({ onPredict, disabled }) {\r\n  const [file, setFile] = useState(null);\r\n  const [fileName, setFileName] = useState('No file chosen');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      if (selectedFile.type !== 'text/csv') {\r\n        setError('Invalid file type. Please upload a .csv file.');\r\n        setFile(null);\r\n        setFileName('No file chosen');\r\n        return;\r\n      }\r\n      setError('');\r\n      setFile(selectedFile);\r\n      setFileName(selectedFile.name);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setError('Please choose a file before predicting.');\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    onPredict(formData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-form-container\">\r\n      <p className=\"upload-instructions\">\r\n        Upload a CSV file containing voice measurements to get a prediction. The file must contain the 22 feature columns from the standard Parkinson's dataset.\r\n      </p>\r\n      <form onSubmit={handleSubmit} className=\"upload-form\">\r\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n          {fileName}\r\n        </label>\r\n        <input \r\n          id=\"file-upload\" \r\n          type=\"file\" \r\n          accept=\".csv\"\r\n          onChange={handleFileChange} \r\n          disabled={disabled}\r\n        />\r\n        <button type=\"submit\" disabled={disabled || !file}>\r\n          {disabled ? 'Analyzing...' : 'Get Prediction'}\r\n        </button>\r\n      </form>\r\n      {error && <p className=\"form-error\">{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}