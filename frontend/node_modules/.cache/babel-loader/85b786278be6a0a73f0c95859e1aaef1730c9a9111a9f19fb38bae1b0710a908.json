{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devin\\\\Desktop\\\\sideProjects\\\\Detect Parkinson Disease\\\\frontend\\\\src\\\\components\\\\PredictionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './PredictionForm.css';\n\n// We need the feature names to generate the form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FEATURE_COLUMNS = ['MDVP:Fo(Hz)', 'MDVP:Fhi(Hz)', 'MDVP:Flo(Hz)', 'MDVP:Jitter(%)', 'MDVP:Jitter(Abs)', 'MDVP:RAP', 'MDVP:PPQ', 'Jitter:DDP', 'MDVP:Shimmer', 'MDVP:Shimmer(dB)', 'Shimmer:APQ3', 'Shimmer:APQ5', 'MDVP:APQ', 'Shimmer:DDA', 'NHR', 'HNR', 'RPDE', 'DFA', 'spread1', 'spread2', 'D2', 'PPE'];\n\n// Let's create some sensible default values for the form from our sample data\nconst defaultFormData = {\n  'MDVP:Fo(Hz)': 135.32,\n  'MDVP:Fhi(Hz)': 152.45,\n  'MDVP:Flo(Hz)': 105.88,\n  'MDVP:Jitter(%)': 0.0075,\n  'MDVP:Jitter(Abs)': 0.00006,\n  'MDVP:RAP': 0.0039,\n  'MDVP:PPQ': 0.0045,\n  'Jitter:DDP': 0.0117,\n  'MDVP:Shimmer': 0.0413,\n  'MDVP:Shimmer(dB)': 0.382,\n  'Shimmer:APQ3': 0.0216,\n  'Shimmer:APQ5': 0.0259,\n  'MDVP:APQ': 0.0331,\n  'Shimmer:DDA': 0.0648,\n  'NHR': 0.0182,\n  'HNR': 20.61,\n  'RPDE': 0.536,\n  'DFA': 0.765,\n  'spread1': -5.12,\n  'spread2': 0.245,\n  'D2': 2.45,\n  'PPE': 0.258\n};\nfunction PredictionForm({\n  onPredict,\n  disabled\n}) {\n  _s();\n  const [formData, setFormData] = useState(defaultFormData);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    // Convert to number, but allow empty string for typing\n    const numericValue = value === '' ? '' : Number(value);\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: numericValue\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onPredict(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"prediction-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter Patient Voice Measurements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-grid\",\n      children: FEATURE_COLUMNS.map(feature => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: feature,\n          children: feature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: feature,\n          name: feature,\n          value: formData[feature],\n          onChange: handleChange,\n          step: \"any\" // Allow floating point numbers\n          ,\n          required: true,\n          disabled: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, feature, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: disabled,\n      children: disabled ? 'Analyzing...' : 'Get Prediction'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PredictionForm, \"AJbwfKzdqjmmqvkvozeeubL+IPQ=\");\n_c = PredictionForm;\nexport default PredictionForm;\nvar _c;\n$RefreshReg$(_c, \"PredictionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FEATURE_COLUMNS","defaultFormData","PredictionForm","onPredict","disabled","_s","formData","setFormData","handleChange","e","name","value","target","numericValue","Number","prevData","handleSubmit","preventDefault","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","feature","htmlFor","type","id","onChange","step","required","_c","$RefreshReg$"],"sources":["C:/Users/devin/Desktop/sideProjects/Detect Parkinson Disease/frontend/src/components/PredictionForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './PredictionForm.css';\r\n\r\n// We need the feature names to generate the form\r\nconst FEATURE_COLUMNS = [\r\n    'MDVP:Fo(Hz)', 'MDVP:Fhi(Hz)', 'MDVP:Flo(Hz)', 'MDVP:Jitter(%)',\r\n    'MDVP:Jitter(Abs)', 'MDVP:RAP', 'MDVP:PPQ', 'Jitter:DDP',\r\n    'MDVP:Shimmer', 'MDVP:Shimmer(dB)', 'Shimmer:APQ3', 'Shimmer:APQ5',\r\n    'MDVP:APQ', 'Shimmer:DDA', 'NHR', 'HNR', 'RPDE', 'DFA',\r\n    'spread1', 'spread2', 'D2', 'PPE'\r\n];\r\n\r\n// Let's create some sensible default values for the form from our sample data\r\nconst defaultFormData = {\r\n    'MDVP:Fo(Hz)': 135.32, 'MDVP:Fhi(Hz)': 152.45, 'MDVP:Flo(Hz)': 105.88,\r\n    'MDVP:Jitter(%)': 0.0075, 'MDVP:Jitter(Abs)': 0.00006, 'MDVP:RAP': 0.0039,\r\n    'MDVP:PPQ': 0.0045, 'Jitter:DDP': 0.0117, 'MDVP:Shimmer': 0.0413,\r\n    'MDVP:Shimmer(dB)': 0.382, 'Shimmer:APQ3': 0.0216, 'Shimmer:APQ5': 0.0259,\r\n    'MDVP:APQ': 0.0331, 'Shimmer:DDA': 0.0648, 'NHR': 0.0182, 'HNR': 20.61,\r\n    'RPDE': 0.536, 'DFA': 0.765, 'spread1': -5.12, 'spread2': 0.245, 'D2': 2.45, 'PPE': 0.258\r\n};\r\n\r\nfunction PredictionForm({ onPredict, disabled }) {\r\n  const [formData, setFormData] = useState(defaultFormData);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    // Convert to number, but allow empty string for typing\r\n    const numericValue = value === '' ? '' : Number(value);\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      [name]: numericValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onPredict(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"prediction-form\">\r\n      <h3>Enter Patient Voice Measurements</h3>\r\n      <div className=\"form-grid\">\r\n        {FEATURE_COLUMNS.map(feature => (\r\n          <div key={feature} className=\"form-group\">\r\n            <label htmlFor={feature}>{feature}</label>\r\n            <input\r\n              type=\"number\"\r\n              id={feature}\r\n              name={feature}\r\n              value={formData[feature]}\r\n              onChange={handleChange}\r\n              step=\"any\" // Allow floating point numbers\r\n              required\r\n              disabled={disabled}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button type=\"submit\" disabled={disabled}>\r\n        {disabled ? 'Analyzing...' : 'Get Prediction'}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PredictionForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}