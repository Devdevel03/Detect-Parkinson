{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devin\\\\Desktop\\\\sideProjects\\\\Detect Parkinson Disease\\\\frontend\\\\src\\\\components\\\\Gauge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Gauge({\n  probability\n}) {\n  _s();\n  const ref = useRef();\n  const width = 250;\n  const height = 150;\n  useEffect(() => {\n    // Clear previous SVG\n    d3.select(ref.current).selectAll(\"*\").remove();\n    const svg = d3.select(ref.current).attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2}, ${height * 0.8})`);\n    const angle = d3.scaleLinear().domain([0, 1]).range([-Math.PI / 2, Math.PI / 2]);\n    const radius = 80;\n\n    // The background arc\n    const backgroundArc = d3.arc().innerRadius(radius - 20).outerRadius(radius).startAngle(-Math.PI / 2).endAngle(Math.PI / 2);\n    svg.append(\"path\").attr(\"d\", backgroundArc).attr(\"fill\", \"#ecf0f1\");\n\n    // The foreground arc (the value)\n    const foregroundArc = d3.arc().innerRadius(radius - 20).outerRadius(radius).startAngle(-Math.PI / 2).endAngle(angle(probability));\n    svg.append(\"path\").attr(\"d\", foregroundArc).attr(\"fill\", d3.interpolateRgb(\"green\", \"red\")(probability));\n\n    // The label\n    svg.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"24px\").attr(\"font-weight\", \"bold\").attr(\"dy\", \"0.3em\").text(`${(probability * 100).toFixed(1)}%`);\n\n    // Sub-labels\n    svg.append(\"text\").attr(\"text-anchor\", \"start\").attr(\"font-size\", \"12px\").attr(\"fill\", \"green\").attr(\"transform\", `translate(${-radius - 5}, 15)`).text(\"Healthy\");\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"font-size\", \"12px\").attr(\"fill\", \"red\").attr(\"transform\", `translate(${radius + 5}, 15)`).text(\"Parkinson's\");\n  }, [probability]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n_s(Gauge, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n_c = Gauge;\nexport default Gauge;\nvar _c;\n$RefreshReg$(_c, \"Gauge\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","Gauge","probability","_s","ref","width","height","select","current","selectAll","remove","svg","attr","append","angle","scaleLinear","domain","range","Math","PI","radius","backgroundArc","arc","innerRadius","outerRadius","startAngle","endAngle","foregroundArc","interpolateRgb","text","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/devin/Desktop/sideProjects/Detect Parkinson Disease/frontend/src/components/Gauge.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction Gauge({ probability }) {\r\n  const ref = useRef();\r\n  const width = 250;\r\n  const height = 150;\r\n\r\n  useEffect(() => {\r\n    // Clear previous SVG\r\n    d3.select(ref.current).selectAll(\"*\").remove();\r\n    \r\n    const svg = d3.select(ref.current)\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height * 0.8})`);\r\n\r\n    const angle = d3.scaleLinear()\r\n      .domain([0, 1])\r\n      .range([-Math.PI / 2, Math.PI / 2]);\r\n\r\n    const radius = 80;\r\n\r\n    // The background arc\r\n    const backgroundArc = d3.arc()\r\n      .innerRadius(radius - 20)\r\n      .outerRadius(radius)\r\n      .startAngle(-Math.PI / 2)\r\n      .endAngle(Math.PI / 2);\r\n\r\n    svg.append(\"path\")\r\n      .attr(\"d\", backgroundArc)\r\n      .attr(\"fill\", \"#ecf0f1\");\r\n\r\n    // The foreground arc (the value)\r\n    const foregroundArc = d3.arc()\r\n      .innerRadius(radius - 20)\r\n      .outerRadius(radius)\r\n      .startAngle(-Math.PI / 2)\r\n      .endAngle(angle(probability));\r\n\r\n    svg.append(\"path\")\r\n      .attr(\"d\", foregroundArc)\r\n      .attr(\"fill\", d3.interpolateRgb(\"green\", \"red\")(probability));\r\n\r\n    // The label\r\n    svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"font-size\", \"24px\")\r\n      .attr(\"font-weight\", \"bold\")\r\n      .attr(\"dy\", \"0.3em\")\r\n      .text(`${(probability * 100).toFixed(1)}%`);\r\n      \r\n    // Sub-labels\r\n    svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"start\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .attr(\"fill\", \"green\")\r\n      .attr(\"transform\", `translate(${-radius-5}, 15)`)\r\n      .text(\"Healthy\");\r\n\r\n    svg.append(\"text\")\r\n      .attr(\"text-anchor\", \"end\")\r\n      .attr(\"font-size\", \"12px\")\r\n      .attr(\"fill\", \"red\")\r\n      .attr(\"transform\", `translate(${radius+5}, 15)`)\r\n      .text(\"Parkinson's\");\r\n\r\n  }, [probability]);\r\n\r\n  return <svg ref={ref}></svg>;\r\n}\r\n\r\nexport default Gauge;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}